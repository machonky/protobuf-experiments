// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageFrame.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProtocolBufferExperiments.Common {

  /// <summary>Holder for reflection information generated from MessageFrame.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class MessageFrameReflection {

    #region Descriptor
    /// <summary>File descriptor for MessageFrame.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageFrameReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJNZXNzYWdlRnJhbWUucHJvdG8SIFByb3RvY29sQnVmZmVyRXhwZXJpbWVu",
            "dHMuQ29tbW9uIj8KDE1lc3NhZ2VGcmFtZRIXCg9tZXNzYWdlVHlwZU5hbWUY",
            "ASABKAkSFgoOZW5jb2RlZE1lc3NhZ2UYAiABKAxiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedCodeInfo(null, new pbr::GeneratedCodeInfo[] {
            new pbr::GeneratedCodeInfo(typeof(global::ProtocolBufferExperiments.Common.MessageFrame), global::ProtocolBufferExperiments.Common.MessageFrame.Parser, new[]{ "MessageTypeName", "EncodedMessage" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MessageFrame : pb::IMessage<MessageFrame> {
    private static readonly pb::MessageParser<MessageFrame> _parser = new pb::MessageParser<MessageFrame>(() => new MessageFrame());
    public static pb::MessageParser<MessageFrame> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtocolBufferExperiments.Common.MessageFrameReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public MessageFrame() {
      OnConstruction();
    }

    partial void OnConstruction();

    public MessageFrame(MessageFrame other) : this() {
      messageTypeName_ = other.messageTypeName_;
      encodedMessage_ = other.encodedMessage_;
    }

    public MessageFrame Clone() {
      return new MessageFrame(this);
    }

    /// <summary>Field number for the "messageTypeName" field.</summary>
    public const int MessageTypeNameFieldNumber = 1;
    private string messageTypeName_ = "";
    public string MessageTypeName {
      get { return messageTypeName_; }
      set {
        messageTypeName_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "encodedMessage" field.</summary>
    public const int EncodedMessageFieldNumber = 2;
    private pb::ByteString encodedMessage_ = pb::ByteString.Empty;
    public pb::ByteString EncodedMessage {
      get { return encodedMessage_; }
      set {
        encodedMessage_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    public override bool Equals(object other) {
      return Equals(other as MessageFrame);
    }

    public bool Equals(MessageFrame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageTypeName != other.MessageTypeName) return false;
      if (EncodedMessage != other.EncodedMessage) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (MessageTypeName.Length != 0) hash ^= MessageTypeName.GetHashCode();
      if (EncodedMessage.Length != 0) hash ^= EncodedMessage.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageTypeName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MessageTypeName);
      }
      if (EncodedMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(EncodedMessage);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (MessageTypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageTypeName);
      }
      if (EncodedMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EncodedMessage);
      }
      return size;
    }

    public void MergeFrom(MessageFrame other) {
      if (other == null) {
        return;
      }
      if (other.MessageTypeName.Length != 0) {
        MessageTypeName = other.MessageTypeName;
      }
      if (other.EncodedMessage.Length != 0) {
        EncodedMessage = other.EncodedMessage;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            MessageTypeName = input.ReadString();
            break;
          }
          case 18: {
            EncodedMessage = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
